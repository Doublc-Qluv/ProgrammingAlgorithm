// 问题描述
// 在一个定义了直角坐标系的纸上，画一个(x1,y1)到(x2,y2)的矩形指将横坐标范围从 x1 到 x2，
// 纵坐标范围从 y1 到 y2 之间的区域涂上颜色。
// 下图给出了一个画了两个矩形的例子。 第一个矩形是(1,1) 到(4, 4)，用绿色和紫色表示。第二
// 个矩形是(2, 3)到(6, 5)，用蓝色和紫色表示。图中，一共有 15 个单位的面积被涂上颜色，其中紫
// 色部分被涂了两次，但在计算面积时只计算一次。在实际的涂色过程中，所有的矩形都涂成统一的颜
// 色，图中显示不同颜色仅为说明方便。
// 给出所有要画的矩形，请问总共有多少个单位的面积被涂上颜色。
// 输入格式
// 输入的第一行包含一个整数 n，表示要画的矩形的个数。
// 接下来 n 行，每行 4 个非负整数，分别表示要画的矩形的左下角的横坐标与纵坐标，以及右上角
// 的横坐标与纵坐标。
// 输出格式
// 输出一个整数，表示有多少个单位的面积被涂上颜色。
// 样例输入
// 2
// 1 1 4 4
// 2 3 6 5
// 样例输出
// 15
// 评测用例规模与约定
// 1<=n<=100， 0<=横坐标、纵坐标<=100。

/*画图CCF20140902*/
/*定义一个二维数组来记录每次需要输入的一行数,行表示要输入多少行,列表示相应的两个坐标*/
#include<iostream>
using namespace std;
int area=0;
int main(){
    freopen("./12Drawing.data","r",stdin);
    int a[105][4];
    int b[105][105]={0};//用于判断这些点是否已被计算过:0,未计算过;1,计算过 
    int n;
    cin>>n;  
    for(int i=0;i<n;i++){
        for(int j=0;j<4;j++){
            cin>>a[i][j];
            //输入工作已经做好,其中a[][0],a[][1],a[][2],a[][3]分别表示左下角的横纵坐标,右上角的横纵坐标 
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0,k=1;k<2;){
                //这里使用一个循环来判断所有相应的点是否已经被计算 ,这里要注意最外层边界点的计算 
            for(int l=a[i][j];l<=a[i][j+2]-1;l++){
                for(int m=a[i][k];m<=a[i][k+2]-1;m++){
                    if(b[l][m]==0){     
                            area+=1;
                            b[l][m]=1;
                        }
                }
            }
            k=k+2;
            j=j+2;                          
        }   
    }   
    cout<<area<<endl;
    return 0;   
}